@startuml
set namespaceSeparator ::

class "app::firebaseHandler.dart::FirebaseHandler" {
  -List<Map<String, dynamic>> _tripsList
  -List<Map<String, dynamic>> _ongoingAndFutureTripsList
  -List<Map<String, dynamic>> _itineraryList
  -FirebaseFirestore _db
  -FirebaseAuth _auth
  +dynamic signOut()
  +dynamic changePassword()
  {static} +String getUID()
  +Future<String> getName()
  +void addUser()
  +void addEntry()
  +void addTrip()
  +void deleteTrip()
  +void editTrip()
  +void saveFName()
  +void saveLName()
  +void saveUserName()
  +Future<Map<String, dynamic>> getTripDetails()
  +Future<Map<String, dynamic>> getUserData()
  +Future<List<Map<String, dynamic>>> getItinerary()
  +Future<List<Map<String, dynamic>>> getOngoingAndFutureTrips()
  +Future<List<Map<String, dynamic>>> getOwnedTrips()
}

"app::firebaseHandler.dart::FirebaseHandler" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"app::firebaseHandler.dart::FirebaseHandler" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"

class "app::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions ios
  {static} +FirebaseOptions currentPlatform
}

"app::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "app::main.dart::Main" {
  +State<Main> createState()
}

class "app::main.dart::_MainState" {
  +StreamSubscription<User?> user
  +void initState()
  +void dispose()
  +Widget build()
}

"app::main.dart::_MainState" o-- "dart::async::StreamSubscription<User>"

class "app::model::entry_model.dart::ItineraryEntry" {
  +String title
  +String description
  +String date
  +String startTime
  +String endTime
  +Map<String, dynamic> toJson()
}

class "app::model::trip_model.dart::BasicTripModel" {
  +int people
  +String title
  +String location
  +String lodging
  +DateTime startDate
  +DateTime endDate
  +String transportation
  +Map<String, dynamic> toJson()
}

class "app::model::trip_model.dart::TripWithOwner" {
  +String owner
  +BasicTripModel tripDetails
  +Map<String, dynamic> toJson()
}

"app::model::trip_model.dart::TripWithOwner" o-- "app::model::trip_model.dart::BasicTripModel"

class "app::model::user_model.dart::UserModel" {
  +String? id
  +String fName
  +String lName
  +String userName
  +String eMail
  +Map<String, dynamic> toJson()
  {static} +String serialize()
  {static} +UserModel deserialize()
}

class "app::notificationsHandler.dart::MessagesHandler" {
  {static} +void setupMessaging()
}

class "app::screens::createTripScreen.dart::CreateTripScreen" {
  +State<CreateTripScreen> createState()
}

class "app::screens::createTripScreen.dart::_CreateTripScreenState" {
  +FirebaseHandler handler
  -DateTime _startDate
  -DateTime _endDate
  -int _selectedPeopleIndex
  -int _selectedTransportIndex
  -String _selectedTransport
  -String _selectedCountry
  +Widget build()
  -Future<dynamic> _createTrip()
  -dynamic _showAlertDialog()
}

"app::screens::createTripScreen.dart::_CreateTripScreenState" o-- "app::firebaseHandler.dart::FirebaseHandler"

class "app::screens::editTripScreen.dart::EditTripScreen" {
  +String tripID
  +BasicTripModel tripModel
  +State<EditTripScreen> createState()
}

"app::screens::editTripScreen.dart::EditTripScreen" o-- "app::model::trip_model.dart::BasicTripModel"

class "app::screens::editTripScreen.dart::_EditTripScreenState" {
  +String tripID
  +BasicTripModel trip
  -String _invitedUser
  -DateTime _startDate
  -DateTime _endDate
  -int _selectedPeopleIndex
  -int _selectedTransportIndex
  -String _selectedTransport
  -String _selectedCountry
  +FirebaseHandler handler
  +void initState()
  +Widget build()
  -dynamic _saveChanges()
  -dynamic _openItineraryScreen()
  -dynamic _openMap()
}

"app::screens::editTripScreen.dart::_EditTripScreenState" o-- "app::model::trip_model.dart::BasicTripModel"
"app::screens::editTripScreen.dart::_EditTripScreenState" o-- "app::firebaseHandler.dart::FirebaseHandler"

class "app::screens::homeScreen.dart::HomeScreen" {
  +State<HomeScreen> createState()
}

class "app::screens::homeScreen.dart::_HomeScreenState" {
  +FirebaseHandler handler
  +String uid
  +void initState()
  +Widget build()
}

"app::screens::homeScreen.dart::_HomeScreenState" o-- "app::firebaseHandler.dart::FirebaseHandler"

class "app::screens::itineraryScreen.dart::ItineraryScreen" {
  +String tripID
  +BasicTripModel trip
  +State<ItineraryScreen> createState()
}

"app::screens::itineraryScreen.dart::ItineraryScreen" o-- "app::model::trip_model.dart::BasicTripModel"

class "app::screens::itineraryScreen.dart::_ItineraryScreenState" {
  +FirebaseHandler handler
  +BasicTripModel trip
  +void initState()
  +Widget build()
  +List<String> getDates()
  -dynamic _addToItinerary()
  -dynamic _saveEntry()
}

"app::screens::itineraryScreen.dart::_ItineraryScreenState" o-- "app::firebaseHandler.dart::FirebaseHandler"
"app::screens::itineraryScreen.dart::_ItineraryScreenState" o-- "app::model::trip_model.dart::BasicTripModel"

class "app::screens::loginScreen.dart::LoginScreen" {
  +State<LoginScreen> createState()
}

class "app::screens::loginScreen.dart::_LoginScreenState" {
  -FirebaseAuth _auth
  +Widget build()
  -dynamic _login()
  -dynamic _resetPassword()
  -dynamic _forgotPasswordDialog()
}

"app::screens::loginScreen.dart::_LoginScreenState" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"

class "app::screens::mainNavigationScreen.dart::MainNavigationScreen" {
  +int index
  +State<MainNavigationScreen> createState()
}

class "app::screens::mainNavigationScreen.dart::_MainNavigationScreenState" {
  -int _index
  +void initState()
  -void _onItemTapped()
  +Widget build()
  +Widget navigateToScreen()
  +dynamic createNavigation()
}

class "app::screens::profileScreen.dart::ProfileScreen" {
  +State<ProfileScreen> createState()
}

class "app::screens::profileScreen.dart::_ProfileScreenState" {
  +FirebaseHandler handler
  +void initState()
  +Widget build()
  -dynamic _shareTrip()
  -dynamic _openEditScreen()
  -dynamic _confirmTripDelete()
}

"app::screens::profileScreen.dart::_ProfileScreenState" o-- "app::firebaseHandler.dart::FirebaseHandler"

class "app::screens::signInScreen.dart::SignInScreen" {
  +State<SignInScreen> createState()
}

class "app::screens::signInScreen.dart::_SignInScreenState" {
  +FirebaseHandler handler
  -FirebaseAuth _auth
  -bool _hiddenPass
  -bool _hiddenConfirmPass
  +Widget build()
  +Future<dynamic> registerUser()
  -Future<String> _register()
}

"app::screens::signInScreen.dart::_SignInScreenState" o-- "app::firebaseHandler.dart::FirebaseHandler"
"app::screens::signInScreen.dart::_SignInScreenState" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"

class "app::widgets::fancyText.dart::FancyText" {
  +Color? color
  +String text
  +Widget build()
}

"app::widgets::fancyText.dart::FancyText" o-- "dart::ui::Color"

class "app::widgets::mapPicker.dart::MapPicker" {
  +State<MapPicker> createState()
}

class "app::widgets::mapPicker.dart::_MapPickerState" {
  +Set<Marker> markersList
  +Widget build()
  -dynamic _handleButtonPress()
}

class "app::widgets::pickDates.dart::PickDates" {
  +State<PickDates> createState()
}

class "app::widgets::pickDates.dart::_PickDatesState" {
  +Widget build()
}

class "app::widgets::profileCard.dart::ProfileCard" {
  +Map<String, dynamic> data
  +void Function() onDataChanged
  +State<ProfileCard> createState()
}

"app::widgets::profileCard.dart::ProfileCard" o-- "dart::ui::void Function()"

class "app::widgets::profileCard.dart::_ProfileCardState" {
  +FirebaseHandler handler
  +bool fNameTFEnabled
  +bool lNameTFEnabled
  +bool userNameTFEnabled
  +bool emailTFEnabled
  +Widget build()
  -dynamic _resetPassword()
  -dynamic _signOut()
  -dynamic _initData()
}

"app::widgets::profileCard.dart::_ProfileCardState" o-- "app::firebaseHandler.dart::FirebaseHandler"

class "app::widgets::selectionCard.dart::SelectionCard" {
  +bool isSelected
  +void Function() onTap
  +String value
  +Widget build()
}

"app::widgets::selectionCard.dart::SelectionCard" o-- "dart::ui::void Function()"


@enduml